#!/bin/bash

# Nome do arquivo para salvar resultados
output_file="relatorio_dominio.txt"
 
# Verifica se o domínio foi passado como argumento
if [ -z "$1" ]; then
    echo "Uso: $0 dominio.com"
    exit 1
fi

# Define o domínio alvo
dominio=$1

# Limpa o arquivo de saída
> "$output_file"

echo "Iniciando coleta para o domínio: $dominio"
echo "Relatório será salvo em $output_file"

# Lista de subdomínios comuns para brute force
subdominios_comuns=(
    "www" "mail" "ftp" "admin" "api" "dev" "test" "stage" "beta" 
    "blog" "support" "help" "login" "portal" "secure" "vpn" "webmail"
    "files" "cloud" "store" "shop" "news" "cdn" "static" "assets"
    "dashboard" "home" "office" "services" "chat" "status" "jobs"
    "docs" "accounts" "api-v2" "client" "partners" "config" "prod" "uat"
)

# Função para realizar brute force de subdomínios
function bruteforce_subdominios() {
   echo -e "\nExecutando brute force de subdomínios para $dominio" | tee -a "$output_file"
   for sub in "${subdominios_comuns[@]}"; do
       # Forma o subdomínio completo
       subdominio="$sub.$dominio"
       # Verifica se o subdomínio existe e registra apenas os encontrados
       if host "$subdominio" &> /dev/null; then
           echo "$subdominio - [ENCONTRADO]" | tee -a "$output_file"
       fi
   done
}

# Função para consulta de DNS com dig
function consultar_dns() {
    echo -e "\nConsultando registros DNS para $dominio" | tee -a "$output_file"
    registros=("A" "NS" "MX" "TXT")
    for reg in "${registros[@]}"; do
        resultado=$(dig +short "$reg" "$dominio")
        # Só adiciona ao relatório se houver resultado
        if [ -n "$resultado" ]; then
            echo "[Registro $reg]" | tee -a "$output_file"
            echo "$resultado" | tee -a "$output_file"
        fi
    done
}
# Função para realizar verificação de portas e sistema operacional com nmap
function verificar_portas_e_sistema() {
    echo -e "\nIniciando verificação de portas e sistema operacional..." | tee -a "$output_file"
    # Remove duplicatas de subdomínios/domínios resolvidos para escanear com nmap
    sort -u "$output_file" | while read -r linha; do
         alvo=$(echo "$linha" | cut -d ' ' -f1)  # Obtém o domínio/subdomínio da linha
         if [ -n "$alvo" ]; then
            nmap_result=$(nmap -Pn -p 22,80,443,3306,8080 --min-rate=1000 -T4 -O "$alvo" | \
                          grep -E "open|closed|filtered|Running|OS details")
            # Só adiciona ao relatório se houver algum resultado do nmap
            if [ -n "$nmap_result" ]; then
                echo -e "\n--------------------------------------------" >> "$output_file"
                echo "[Alvo: $alvo]" | tee -a "$output_file"
                echo "$nmap_result" | tee -a "$output_file"
                echo -e "--------------------------------------------" >> "$output_file"
            fi
         fi
     done
 }
  
# Executa as funções de coleta de forma assíncrona
consultar_dns
bruteforce_subdominios
  
# Aguarda a conclusão das consultas DNS e brute force de subdomínios
wait
  
# Realiza varredura de portas e sistema operacional para cada domínio/subdomínio encontrado
verificar_portas_e_sistema
  
echo "Coleta concluída! Relatório completo disponível em $output_file."
  
~                                                                                   
